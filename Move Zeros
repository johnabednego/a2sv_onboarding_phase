class Solution:
    def moveZeroes(self, nums: List[int]) -> None:
        """
        Do not return anything, modify nums in-place instead.
        """

        '''
        4, 0, 0, 1, 3
        '''

        # slow = 0  # Slow pointer to track the position for the next non-zero element

        # # Iterate through the array with the fast pointer
        # for fast in range(len(nums)):
        #     if nums[fast] != 0:
        #         # If the current element is non-zero, move it to the slow pointer position
        #         nums[slow] = nums[fast]
        #         slow += 1

        # # Fill the remaining positions after the slow pointer with zeros
        # while slow < len(nums):
        #     nums[slow] = 0
        #     slow += 1





        seeker =0
        position =0

        while seeker<len(nums):
            if nums[seeker] !=0:
                nums[position], nums[seeker] = nums[seeker], nums[position]
                position+=1
            seeker+=1


   
